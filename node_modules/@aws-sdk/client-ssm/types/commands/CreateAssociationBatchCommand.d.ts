import { SSMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../SSMClient";
import { CreateAssociationBatchRequest, CreateAssociationBatchResult } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CreateAssociationBatchCommandInput = CreateAssociationBatchRequest;
export declare type CreateAssociationBatchCommandOutput = CreateAssociationBatchResult & __MetadataBearer;
/**
 * <p>Associates the specified Systems Manager document with the specified instances or targets.</p>
 *          <p>When you associate a document with one or more instances using instance IDs or tags,
 *    SSM Agent running on the instance processes the document and configures the instance as
 *    specified.</p>
 *          <p>If you associate a document with an instance that already has an associated document, the
 *    system returns the AssociationAlreadyExists exception.</p>
 */
export declare class CreateAssociationBatchCommand extends $Command<CreateAssociationBatchCommandInput, CreateAssociationBatchCommandOutput, SSMClientResolvedConfig> {
    readonly input: CreateAssociationBatchCommandInput;
    constructor(input: CreateAssociationBatchCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SSMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAssociationBatchCommandInput, CreateAssociationBatchCommandOutput>;
    private serialize;
    private deserialize;
}
