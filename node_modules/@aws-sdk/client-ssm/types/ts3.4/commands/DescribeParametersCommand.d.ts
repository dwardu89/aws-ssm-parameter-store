import { SSMClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../SSMClient";
import { DescribeParametersRequest, DescribeParametersResult } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DescribeParametersCommandInput = DescribeParametersRequest;
export declare type DescribeParametersCommandOutput = DescribeParametersResult & __MetadataBearer;
/**
 * <p>Get information about a parameter.</p>
 *          <note>
 *             <p>Request results are returned on a best-effort basis. If you specify <code>MaxResults</code>
 *     in the request, the response includes information up to the limit specified. The number of items
 *     returned, however, can be between zero and the value of <code>MaxResults</code>. If the service
 *     reaches an internal limit while processing the results, it stops the operation and returns the
 *     matching values up to that point and a <code>NextToken</code>. You can specify the
 *      <code>NextToken</code> in a subsequent call to get the next set of results.</p>
 *          </note>
 */
export declare class DescribeParametersCommand extends $Command<DescribeParametersCommandInput, DescribeParametersCommandOutput, SSMClientResolvedConfig> {
    readonly input: DescribeParametersCommandInput;
    constructor(input: DescribeParametersCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: SSMClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeParametersCommandInput, DescribeParametersCommandOutput>;
    private serialize;
    private deserialize;
}
